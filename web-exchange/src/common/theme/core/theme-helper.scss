@import '~sass-json-export/stylesheets/sass-json-export';

$application-themes: ();

/*
 * Export a color palette to the content of body::before.
 */
@mixin export-theme($theme-name, $palette) {
  $new: ( $theme-name : $palette );
  $application-themes: map-merge($application-themes, $new) !global;
}

@mixin build-themes() {
  @include json-encode($application-themes, regular); // provided by sass-json-export module
}

/*
 * Get a color from the application's color palette
 *
 * Usage:
 *
 * color(primary, light) // gets primary[light] in  ( primary: ( light: #ffffff ))
 * color(secondary)      // gets secondary[main] in  ( secondary: ( main: #dddddd ))
 */
@function color($variants...) {
  @if length($variants) == 0 { @return error('No name passed to `color()`'); }
  @if length($variants) == 1 { @return color(nth($variants, 1), main); }

  @return unquote("var(--#{join($variants, '-')})");
}

// Used internally to call an scss error
@function error($msg) {
  @error $msg;
  @return null;
}

@function join($arr, $delim) {
  $result: null;

  @for $i from 1 through length($arr) {
    $item: nth($arr, $i);
    $result: if($i != length($arr), $result#{$item}#{$delim}, $result#{$item});
  }

  @return $result;
}
